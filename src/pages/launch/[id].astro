---
import { getLaunchById, getLatestLaunches } from "../../core/actions/launches-action";
import { formatDate, formatTime } from "../../utils/format-date";
import Layout from "../../layouts/Layout.astro";
import StatusBadge from "../../components/ui/StatusBadge.astro";
import Calendar from "../../assets/icons/Calendar.astro";
import Clock from "../../assets/icons/Clock.astro";

const { id } = Astro.params;

let launch: any;
if (id) {
  launch = await getLaunchById({ id });
}

// Astro no puede obtener los ids sin precargarlos por defecto ya que trabaja de forma estática
// export async function getStaticPaths() {
//   const launches = await getLatestLaunches();
//   return launches.map(launch => ({
//     params: { id: launch.id },
//   }));
// }
// Solución rapida: colocar output: "server" en astro.config.mjs
// Con esto no hay necesidad de usar getStaticPaths
---

<Layout title={`Launch ${launch?.name}`}>
  <article
    class="flex flex-col lg:flex-row justify-between items-center rounded-lg shadow-md p-6 lg:p-8
    bg-gray-800 border-gray-700 gap-4"
  >
    <!-- logo -->
    <div class="flex justify-center items-center w-full lg:w-1/3">
      <img
        class="w-54 h-auto"
        src={launch?.links?.patch.small}
        alt={launch?.name}
      />
    </div>
    <!-- Información -->
    <div class="flex flex-col gap-y-2 w-full lg:w-2/3">
      <h1 class="text-white text-center lg:text-left text-2xl lg:text-3xl">
        Launch #{launch?.flight_number}
      </h1>
      <h2 class="text-white text-center lg:text-left text-xl lg:text-2xl">
        {launch?.name}
      </h2>
      <p class="text-gray-400 font-light text-base lg:text-lg lg:pr-4">
        {launch?.details || "Launch details are not available right now."}
      </p>
      <p class="text-gray-400 text-sm flex items-center">
        <Calendar class="size-3.5 mr-1" />
        {formatDate(launch?.date_local)}
      </p>
      <p class="text-gray-400 text-sm flex items-center">
        <Clock class="size-3.5 mr-1" />
        {formatTime(launch?.date_local)}
      </p>
      <span>
        <StatusBadge success={launch?.success} />
      </span>
    </div>
  </article>
</Layout>
